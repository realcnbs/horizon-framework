<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace='com.realcnbs.horizon.framework.data.mapper.Generic'>

    <sql id="filters">
        <choose>
            <when test="fieldFilter.CheckType.name() == 'EQUALS'">
                <if test="fieldFilter.value == null">
                    ${logic} ${prefix}${fieldFilter.field} IS NULL
                </if>
                <if test="fieldFilter.value != null">
                    ${logic} ${prefix}${fieldFilter.field} = #{fieldFilter.value}
                </if>
            </when>
            <when test="fieldFilter.CheckType.name() == 'NOT_EQUALS'">
                <if test="fieldFilter.value == null">
                    ${logic} ${prefix}${fieldFilter.field} IS NOT NULL
                </if>
                <if test="fieldFilter.value != null">
                    ${logic} ${prefix}${fieldFilter.field} != #{fieldFilter.value}
                </if>
            </when>
            <when test="fieldFilter.CheckType.name() == 'LESS'">
                ${logic} ${prefix}${fieldFilter.field} &lt; #{fieldFilter.value}
            </when>
            <when test="fieldFilter.CheckType.name() == 'GREATER'">
                ${logic} ${prefix}${fieldFilter.field} &gt; #{fieldFilter.value}
            </when>
            <when test="fieldFilter.CheckType.name() == 'GREATER_EQUALS'">
                ${logic} ${prefix}${fieldFilter.field} &gt;= #{fieldFilter.value}
            </when>
            <when test="fieldFilter.CheckType.name() == 'LESS_EQUALS'">
                ${logic} ${prefix}${fieldFilter.field} &lt;= #{fieldFilter.value}
            </when>
            <when test="fieldFilter.CheckType.name() == 'IN'">
                ${logic} ${prefix}${fieldFilter.field} IN
                <foreach item="item" collection="fieldFilter.value" open="(" separator="," close=")">#{item}</foreach>
            </when>
            <when test="fieldFilter.CheckType.name() == 'ARRAY_ANY'">
                ${logic} ${prefix}${fieldFilter.field} &amp;&amp;
                <foreach item="item" collection="fieldFilter.value" open="ARRAY[" separator="," close="]::text[]">#{item}</foreach>
            </when>
            <when test="fieldFilter.CheckType.name() == 'LIKE' or fieldFilter.CheckType.name() == 'STARTS_WITH' or fieldFilter.CheckType.name() == 'ENDS_WITH'">
                ${logic} ${prefix}${fieldFilter.field} ILIKE #{fieldFilter.value}
            </when>
        </choose>
    </sql>

    <sql id="FieldFilter">
        <if test="filter != null and filter.fieldFilters.size > 0">
            <where>
                <foreach item="fieldFilter" collection="filter.fieldFilters">
                    <include refid="com.realcnbs.horizon.framework.data.mapper.Generic.filters">
                        <property name="logic" value="${fieldFilter.logicType.name()}"/>
                    </include>
                </foreach>
            </where>
        </if>
    </sql>

    <sql id="JoinFieldFilter">
        <if test="filter != null and filter.joinFieldFilters.size > 0">
            <if test="filter.fieldFilters.size == 0">
                <where>
                    <foreach item="fieldFilter" collection="filter.joinFieldFilters">
                        <include refid="com.realcnbs.horizon.framework.data.mapper.Generic.filters">
                            <property name="logic" value="${fieldFilter.logicType.name()}"/>
                        </include>
                    </foreach>
                </where>
            </if>
            <if test="filter.fieldFilters.size != 0">
                <foreach item="fieldFilter" collection="filter.joinFieldFilters">
                    <include refid="com.realcnbs.horizon.framework.data.mapper.Generic.filters">
                        <property name="logic" value="${fieldFilter.logicType.name()}"/>
                    </include>
                </foreach>
            </if>
        </if>
    </sql>

    <sql id="Sort">
        <if test="filter != null and filter.sorts.size > 0">
            <foreach item="sort" collection="filter.sorts" open="ORDER BY" separator="NULLS LAST, " close=" NULLS LAST">
                ${prefix}${sort.field} ${sort.direction}
            </foreach>
        </if>
    </sql>

    <sql id="Limit">
        <if test="offset != null and limit != null">
            <if test="offset != 0">
                OFFSET ${offset}
            </if>
            LIMIT ${limit}
        </if>
    </sql>

</mapper>